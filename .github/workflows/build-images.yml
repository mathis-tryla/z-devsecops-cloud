name: Build images

on:
  push:
    branches: [ "main" ]

env:
  FRONTEND: ./frontend
  BACKEND: ./backend
  ARTIFACT_REGISTRY: europe-west1-docker.pkg.dev/z-devsecops-cloud/z-devsecops-registry
  SA: github-action-sa@z-devsecops-cloud.iam.gserviceaccount.com
  WORKLOAD_ID_PROVIDER: projects/599822394994/locations/global/workloadIdentityPools/cicd/providers/github

jobs:
  build-images:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write
      security-events: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}

      - name: Set up JDK 19
        uses: actions/setup-java@v3
        with:
          java-version: '19'
          distribution: 'temurin'
          cache: maven

      # SAST
      #- name: Create .mvn directory for Snyk
      #  run: |-
      #    cd ${{ github.workspace }}/backend
      #    mvn -N io.takari:maven:wrapper

      #- name: Run Snyk to check for Frontend vulnerabilities
      #  uses: snyk/actions/node@master
        # TODO: comment the line below in production
      #  continue-on-error: true
      #  env:
      #    SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      #  with:
      #    args: --sarif-file-output=snyk-frontend.sarif --file=frontend/package-lock.json -d

      #- name: Upload Snyk scan Frontend results to GitHub Security tab
      #  uses: github/codeql-action/upload-sarif@v2
      #  with:
      #    sarif_file: snyk-frontend.sarif
      #    category: 'snyk-frontend'

      #- name: Run Snyk to check for Backend vulnerabilities
      #  uses: snyk/actions/maven@master
        # TODO: comment the line below in production
      #  continue-on-error: true
      #  env:
      #    SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      #  with:
      #    args: --sarif-file-output=snyk-backend.sarif --file=backend/pom.xml -d

      #- name: Upload Snyk scan Backend results to GitHub Security tab
      #  uses: github/codeql-action/upload-sarif@v2
      #  with:
      #    sarif_file: snyk-backend.sarif
      #    category: 'snyk-backend'

      - name: Build with Maven
        run: mvn -B --update-snapshots package --file ${{ env.BACKEND }}/pom.xml

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v0
        id: auth
        with:
          create_credentials_file: 'true'
          workload_identity_provider: ${{ env.WORKLOAD_ID_PROVIDER }}
          service_account: ${{ env.SA }}

      - name: Configure Docker to use the gcloud command-line tool as a credential
        run: |
          gcloud config set disable_prompts true
          gcloud auth login --brief --cred-file="${{ steps.auth.outputs.credentials_file_path }}"
          gcloud --quiet auth configure-docker europe-west1-docker.pkg.dev

      - name: Build frontend docker image
        run: |-
          docker build \
            --tag "${{ env.ARTIFACT_REGISTRY }}/frontend" \
            ${{ env.FRONTEND }}

      - name: Build backend docker image
        run: |-
          docker build \
            --tag "${{ env.ARTIFACT_REGISTRY }}/backend" \
            ${{ env.BACKEND }}

      #- name: Run Trivy vulnerability scanner for frontend
      #  env:
      #    TRIVY_USERNAME: ""
      #  uses: aquasecurity/trivy-action@master
      #  with:
      #    image-ref: ${{ env.ARTIFACT_REGISTRY }}/frontend:latest
      #    scan-ref: ${{ github.workspace }}/frontend
      #    format: 'sarif'
      #    output: 'trivy-results-frontend.sarif'

      #- name: Run Trivy vulnerability scanner for backend
      #  env:
      #    TRIVY_USERNAME: ""
      #  uses: aquasecurity/trivy-action@master
      #  with:
      #    image-ref: ${{ env.ARTIFACT_REGISTRY }}/backend:latest
      #    scan-ref: ${{ github.workspace }}/backend
      #    format: 'sarif'
      #    output: 'trivy-results-backend.sarif'

      #- name: Upload Trivy scan results to GitHub Security tab frontend
      #  uses: github/codeql-action/upload-sarif@v2
      #  with:
      #    sarif_file: 'trivy-results-frontend.sarif'
      #    category: 'frontend'

      #- name: Upload Trivy scan results to GitHub Security tab backend
      #  uses: github/codeql-action/upload-sarif@v2
      #  with:
      #    sarif_file: 'trivy-results-backend.sarif'
      #    category: 'backend'

      #- name: Publish docker images to Google Artifact Registry
      #  run: |-
      #    SHA_FRONT=$(docker push "${{ env.ARTIFACT_REGISTRY }}/frontend" | grep digest: | cut -f3 -d" ")
      #    SHA_BACK=$(docker push "${{ env.ARTIFACT_REGISTRY }}/backend" | grep digest: | cut -f3 -d" ")