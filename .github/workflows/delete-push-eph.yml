name: Delete EPH resources 

on:
  pull_request:
    types: [ closed ]

env:
  GKE_CLUSTER: z-devsecops-cluster
  GKE_ZONE: europe-west1-b
  SA: github-action-sa@z-devsecops-cloud.iam.gserviceaccount.com
  WORKLOAD_ID_PROVIDER: projects/599822394994/locations/global/workloadIdentityPools/cicd/providers/github
  ARTIFACT_REGISTRY: europe-west1-docker.pkg.dev/z-devsecops-cloud/z-devsecops-registry
  PR_NUMBER: ${{ github.event.number }}

jobs:
  delete-push-eph:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write
      security-events: write
      issues: write
      statuses: write

    steps:
      - uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v0
        id: auth
        with:
          create_credentials_file: 'true'
          workload_identity_provider: ${{ env.WORKLOAD_ID_PROVIDER }}
          service_account: ${{ env.SA }}

      - name: Configure Docker to use the gcloud command-line tool as a credential
        run: |
          gcloud config set disable_prompts true
          gcloud auth login --brief --cred-file="${{ steps.auth.outputs.credentials_file_path }}"
          gcloud --quiet auth configure-docker europe-west1-docker.pkg.dev

      - name: Get the GKE credentials
        uses: google-github-actions/get-gke-credentials@v1.0.1
        with:
          project_id: z-devsecops-cloud
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}

      - name: Delete all resources from eph namespace
        env:
          EPH_NS : pr-${{ env.PR_NUMBER }}
        run: |-
          kubectl delete deploy,svc,ingress --all -n $EPH_NS
          kubectl delete ns $EPH_NS --force

      - name: Delete eph dast report artifact 
        uses: geekyeggo/delete-artifact@v2
        with:
          name: dast_eph_report

      #- name: Delete frontend GAR images more-than-1-month-dated
      #  run: |-
      #    FRONT_IMAGES=$(gcloud container images list-tags ${{ env.ARTIFACT_REGISTRY }}/frontend --format='value(tags)')
      #    for image in $FRONT_IMAGES; do \
      #      gcloud container images delete $image --repository=${{ env.ARTIFACT_REGISTRY }} --quiet \
      #    done